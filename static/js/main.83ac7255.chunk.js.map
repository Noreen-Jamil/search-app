{"version":3,"sources":["apiService.js","App.js","reportWebVitals.js","index.js"],"names":["endPoint","App","useState","arrayOfPokemon","updateArrayOfPokemon","searchValue","UpdateSearchValue","searchArray","setSearchArray","useEffect","fetch","then","response","json","data","results","map","item","index","name","image","className","id","src","alt","placeholder","value","onChange","e","target","filter","console","log","startsWith","toLowerCase","showSearchData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAMA,EACK,oC,MCGI,SAASC,IAAO,IAAD,EACmBC,mBAAS,IAD5B,mBACrBC,EADqB,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAErBG,EAFqB,KAERC,EAFQ,OAGUJ,mBAAS,MAHnB,mBAGrBK,EAHqB,KAGRC,EAHQ,KAc5BC,qBAAU,WDbDC,MAAMV,GACVW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUA,KCYDH,MAAK,SAACG,GACrBV,EACEU,EAAKC,QAAQC,KAAI,SAACC,EAAMC,GACtB,MAAO,CACLC,KAAMF,EAAKE,KACXC,MAAM,iDAAD,OACHF,EAAQ,EADL,kBAOZ,IAcH,OACE,sBAAKG,UAAU,MAAMC,GAAG,gBAAxB,UACE,sBAAKA,GAAG,OAAR,UACE,qBACEA,GAAG,eACHC,IAAI,+IACJC,IAAI,SAEN,qBACEF,GAAG,cACHC,IAAI,qDACJC,IAAI,YAIR,sBAAKF,GAAG,qBAAR,UACE,oBAAIA,GAAG,eAAP,6BACA,sBAAKA,GAAG,mBAAR,UACE,mBAAGD,UAAU,kBACb,uBACEI,YAAY,iBACZC,MAAOrB,EACPsB,SAAU,SAACC,IAnCE,SAACA,GACtBtB,EAAkBsB,EAAEC,OAAOH,OAE3BlB,EACEL,EAAe2B,QAAO,SAACb,GAErB,GADAc,QAAQC,IAAIf,EAAKE,MACbF,EAAKE,KAAKc,WAAWL,EAAEC,OAAOH,MAAMQ,eACtC,OAAOjB,MA6BHkB,CAAeP,YAKvB,oBAAIP,UAAU,8BAA8BC,GAAG,iBAA/C,SACmB,OAAhBf,EACGJ,EAAea,KAAI,SAACC,EAAMC,GAExB,OACE,qBAAgBG,UAAU,kBAA1B,UACE,qBAAKE,IAAKN,EAAKG,MAAOI,IAAKP,EAAKE,OAC/BF,EAAKE,OAFCD,MAMbX,EAAYS,KAAI,SAACC,EAAMC,GAErB,OACE,qBAAgBG,UAAU,kBAA1B,UACE,qBAAKE,IAAKN,EAAKG,MAAOI,IAAKP,EAAKE,OAC/BF,EAAKE,OAFCD,WCvFzB,IAYekB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7C,EAAD,MAEF8C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.83ac7255.chunk.js","sourcesContent":["const endPoint = {\r\n    names: \"https://pokeapi.co/api/v2/pokemon\"\r\n  };\r\n  \r\n  export const getPokemonList = () => {\r\n    return fetch(endPoint.names)\r\n      .then((response) => response.json())\r\n      .then((data) => data);\r\n  };\r\n  ","import React, { useEffect, useState } from \"react\";\nimport { getPokemonList } from \"./apiService\";\nimport \"./appStyle.css\";\n\nexport default function App() {\n  const [arrayOfPokemon, updateArrayOfPokemon] = useState([]);\n  const [searchValue, UpdateSearchValue] = useState(\"\");\n  const [searchArray, setSearchArray] = useState(null);\n\n  // useEffect(() => {\n  //   getPokemonList().then((data) => {\n  //     updateArrayOfPokemon(\n  //       data.results.map((item) => {\n  //         return item.name;\n  //       })\n  //     );\n  //   });\n  // }, []);\n  useEffect(() => {\n    getPokemonList().then((data) => {\n      updateArrayOfPokemon(\n        data.results.map((item, index) => {\n          return {\n            name: item.name,\n            image: `https://pokeres.bastionbot.org/images/pokemon/${\n              index + 1\n            }.png`\n          };\n        })\n      );\n    });\n  }, []);\n  const showSearchData = (e) => {\n    UpdateSearchValue(e.target.value);\n\n    setSearchArray(\n      arrayOfPokemon.filter((item) => {\n        console.log(item.name);\n        if (item.name.startsWith(e.target.value.toLowerCase())) {\n          return item;\n        }\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\" id=\"app-container\">\n      <div id=\"logo\">\n        <img\n          id=\"logo-heading\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1200px-International_Pok%C3%A9mon_logo.svg.png\"\n          alt=\"logo\"\n        />\n        <img\n          id=\"pokemon-img\"\n          src=\"https://i.dlpng.com/static/png/6365708_preview.png\"\n          alt=\"logo\"\n        />\n      </div>\n\n      <div id=\"search-and-heading\">\n        <h1 id=\"list-heading\">List Of Pokemon</h1>\n        <div id=\"search-container\">\n          <i className=\"fas fa-search\"></i>\n          <input\n            placeholder=\"search pokemon\"\n            value={searchValue}\n            onChange={(e) => {\n              showSearchData(e);\n            }}\n          />\n        </div>\n      </div>\n      <ul className=\"list-group list-group-flush\" id=\"list-container\">\n        {searchArray === null\n          ? arrayOfPokemon.map((item, index) => {\n              // console.log(item);\n              return (\n                <li key={index} className=\"list-group-item\">\n                  <img src={item.image} alt={item.name} />\n                  {item.name}\n                </li>\n              );\n            })\n          : searchArray.map((item, index) => {\n              // console.log(item);\n              return (\n                <li key={index} className=\"list-group-item\">\n                  <img src={item.image} alt={item.name} />\n                  {item.name}\n                </li>\n              );\n            })}\n      </ul>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}